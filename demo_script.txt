-------------------------------------------------------------
AKS-Engine GPU-Enabled K8s Cluster with Multiple Node Pools
-------------------------------------------------------------

1. Go to the "gpu-deployment" directory

2. Talk about the cluster "definition.json" file
    -   Show the GPU Standard_NC6 VM

3. Generate the ARM template from the definition file:
aks-engine generate definition.json

4. Show the newly created "azuredeploy.json" file

5. Start the cluster deployment:
az group deployment create --name "AKS-Engine-GPU" --resource-group "AKS-Engine-GPU-RG" --template-file "./_output/aksgpu/azuredeploy.json" --parameters "./_output/aksgpu/azuredeploy.parameters.json"

6. Go to Azure and show resources being create in the Resource Group

7. Switch to the "gpu-ready-deployment" cluster directory

8. kubectl get nodes -o wide --kubeconfig config-aks-engine-gpu

9. Show the node GPU capacity
    -   kubectl describe node k8s-gpupool-36572287-0 --kubeconfig config-aks-engine-gpu
    -   Search for "capacity"


-------------------------------------------------------------
AKS-Engine CosmosDB-Enabled K8s Cluster
-------------------------------------------------------------

1. Go to the "cosmosdb-ready-deployment" directory

2. Show the "cosmosEtcd" parameter in the "definition.json" file (line 15)

3. Go to Azure and show the CosmosDB instance in the “AKS-Engine-Cosmos-Ready-RG” Resource Group